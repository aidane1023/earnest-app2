@startuml
'https://plantuml.com/class-diagram

class InventoryManagementApplication
class Controller
class List
class Item
class ErrorMessage
class FileManagement
class InvalidPopup

InventoryManagementApplication -- Controller
Controller -- List
Controller -- Item
Controller -- ErrorMessage
Controller -- InvalidPopup
Controller -- FileManagement


class InventoryManagementApplication {
    + void start(Stage stage)
    + static void main(String[] args)
}

class Controller {
    - Button add
    - Button delete
    - Button edit
    - Button clear
    - Button search
    - MenuItem menuSortSerial
    - MenuItem menuSortName
    - MenuItem menuSortValue
    - MenuItem menuSortOriginal
    - MenuItem menuManual
    - MenuItem menuLoad
    - MenuItem menuSave
    - TextField serialNumber
    - TextField name
    - TextField value
    - TableView<Item> table
    - ObservableTable<Item> inventoryList
    - Boolean editorGate
    + initialize(url, resourceBundle)
    + newItem()
    + deleteItem()
    + editItem()
    + clearList()
    + searchList()
    + sortAZ()
    + sort321()
    + sortSerial()
    + sortOriginal()
    + manual()
    + saveList()
    + loadList()
    + refresh()
}

class FileManagement {
    - FileChooser fileChooser
    + save(inventoryList)
    + load(inventoryList)
    + loadTSV(file, inventoryList)
    + loadHTML(file, inventoryList)
    + loadJSON(file, inventoryList)
    + writeTSV(file, inventoryList)
    + writeHTML(file, inventoryList)
    + writeJSON(file, inventoryList)
}

class ErrorMessage {
    + invalidInputCheck(serialNumber, name, value, inventoryList)
    + serialFormat(serialNumber, inventoryList)
}

class InvalidPopup {
    + display()
}

class List {
    + clear()
}

class Item {
    - String serialNumber
    - String name
    - Double value
    + getSerialNumber()
    + getName()
    + getValue()
    + setSerialNumber()
    + setName()
    + setValue()
    + Item(serialNumber, name, value)
    + toStringTab()
    + toString()
}
@enduml